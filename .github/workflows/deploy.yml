name: Deploy Backend to Internet Computer

on:
  push:
    branches:
      - prakash/updated_car_details

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      DFX_PRINCIPAL_ID: ${{ secrets.FUEL_DAO_CANISTER_CONTROLLER_PRINCIPAL_ID }}
      DFX_PRIVATE_KEY: ${{ secrets.FUEL_DAO_CANISTER_CONTROLLER_PRIVATE_KEY }}
      BACKEND_CANISTER_ID: hmh62-uiaaa-aaaai-actxq-cai

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y pkg-config build-essential libssl-dev

    - name: Download and install DFX SDK
      run: |
        DFX_VERSION=0.24.0
        curl -LO https://github.com/dfinity/sdk/releases/download/${DFX_VERSION}/dfx-${DFX_VERSION}-x86_64-linux.tar.gz
        sudo tar -xzf dfx-${DFX_VERSION}-x86_64-linux.tar.gz -C /usr/local/bin
        rm dfx-${DFX_VERSION}-x86_64-linux.tar.gz

    - name: Check DFX installation
      run: |
        /usr/local/bin/dfx --version

    - name: Check if identity exists and use it or create a new one
      run: |
        if /usr/local/bin/dfx identity list | grep -q "github-action"; then
          echo "Using existing identity 'github-action'."
          /usr/local/bin/dfx identity use github-action
        else
          echo "Creating new identity 'github-action'."
          echo "${DFX_PRIVATE_KEY}" > identity.pem
          chmod 600 identity.pem
          /usr/local/bin/dfx identity new github-action --storage-mode=plaintext
          /usr/local/bin/dfx identity import github-action identity.pem
          /usr/local/bin/dfx identity use github-action
        fi

    - name: Build Backend with DFX
      run: |
        /usr/local/bin/dfx build backend

    - name: Install Backend Canister
      run: |
        /usr/local/bin/dfx canister install backend --mode reinstall --network ic

    - name: Deploy Backend to Canister 2
      run: |
        /usr/local/bin/dfx deploy backend --network ic

    - name: Clean up
      run: |
        rm -f identity.pem
